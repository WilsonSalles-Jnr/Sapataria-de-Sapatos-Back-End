// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sapataria_de_Sapatos.Models;

#nullable disable

namespace Sapataria_de_Sapatos.Migrations
{
    [DbContext(typeof(contexto))]
    [Migration("20220525041123_migrationModels")]
    partial class migrationModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Gerente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("vendaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("vendaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("clienteId")
                        .HasColumnType("integer");

                    b.Property<int?>("vendedorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("clienteId");

                    b.HasIndex("vendedorId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.loja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Lojas");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<int?>("vendaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("vendaId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoInicio")
                        .HasColumnType("integer");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<int>("MesInicio")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("vendaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("vendaId");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.cliente", b =>
                {
                    b.HasOne("Sapataria_de_Sapatos.Models.venda", null)
                        .WithMany("clienteId")
                        .HasForeignKey("vendaId");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.genero", b =>
                {
                    b.HasOne("Sapataria_de_Sapatos.Models.cliente", null)
                        .WithMany("GeneroId")
                        .HasForeignKey("clienteId");

                    b.HasOne("Sapataria_de_Sapatos.Models.vendedor", null)
                        .WithMany("GeneroId")
                        .HasForeignKey("vendedorId");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.produto", b =>
                {
                    b.HasOne("Sapataria_de_Sapatos.Models.venda", null)
                        .WithMany("produtoId")
                        .HasForeignKey("vendaId");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.vendedor", b =>
                {
                    b.HasOne("Sapataria_de_Sapatos.Models.venda", null)
                        .WithMany("vendedorId")
                        .HasForeignKey("vendaId");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.cliente", b =>
                {
                    b.Navigation("GeneroId");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.venda", b =>
                {
                    b.Navigation("clienteId");

                    b.Navigation("produtoId");

                    b.Navigation("vendedorId");
                });

            modelBuilder.Entity("Sapataria_de_Sapatos.Models.vendedor", b =>
                {
                    b.Navigation("GeneroId");
                });
#pragma warning restore 612, 618
        }
    }
}
